function Get-GpsLocation {
    Add-Type -AssemblyName System.Device #Required to access System.Device.Location namespace
    $GeoWatcher = New-Object System.Device.Location.GeoCoordinateWatcher #Create the required object
    $GeoWatcher.Start() #Begin resolving current locaton

    while (($GeoWatcher.Status -ne 'Ready') -and ($GeoWatcher.Permission -ne 'Denied')) {
        Start-Sleep -Milliseconds 100 #Wait for discovery.
    }  

    if ($GeoWatcher.Permission -eq 'Denied'){
        Write-Warning 'Access to GPS is denied.'
    } else {
        return ($GeoWatcher.Position.Location | Select Latitude,Longitude) #Select the relevent results.
    }
}

function Get-CurrentLocationName ($currentGPS) {
    $currentGPS.Latitude = [math]::Round($currentGPS.Latitude,2)
    $currentGPS.Longitude = [math]::Round($currentGPS.Longitude,2)

    $KnownLocations = @()
    $KnownLocations += @{'Name' = 'HOME'; 'Latitude' = 37.83; 'Longitude' = -122.38}
    $KnownLocations += @{'Name' = 'WORK: HQ'; 'Latitude' = 37.77; 'Longitude' = -121.96}

    foreach ($location in $KnownLocations) {
        if ($location.Latitude -eq $currentGPS.Latitude) {
            if ($location.Longitude -eq $currentGPS.Longitude) {
                return $location.Name
            }
        }
    }
}